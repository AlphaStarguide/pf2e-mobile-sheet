$familiar-breakpoint: 535px;
$party-breakpoint: 660px;
$player-character-breakpoint: 745px;
$loot-sheet-breakpoint: 445px;
$vehicle-sheet-breakpoint: 585px;
$hazard-sheet-breakpoint: 495px;
$global-breakpoint: 930px;

:root {
	--send-button-gap: 0.5em;
}

@mixin sheet-nav-bar {
	nav.sheet-navigation {
		flex-wrap: wrap;
		height: unset;

		.item {
			font-size: 1.5em;
			height: 2rem;
			width: 2rem;

			.action-glyph {
				font-size: 1.5rem;
			}
		}

		.panel-title {
			display: none;
			width: unset;
		}
	}
}

.sheet.actor {
	container: actor-sheet / inline-size;


	@container actor-sheet (width < #{$familiar-breakpoint}) {
		&.familiar {
			.header-content {
				overflow: hidden;

				.sub-header {
					flex-direction: column;
				}

				.details-section {
					flex-direction: column;
				}
			}

			.main-section {
				flex-direction: column;
				overflow: hidden scroll;

				.skills-content {
					width: unset;

					.skills-list {
						display: grid;
						grid-template-columns: repeat(2, 1fr);
					}
				}

				.main-container {
					overflow: initial;
				}
			}
		}
	}

	@container actor-sheet (width < #{$party-breakpoint}) {
		&.party {
			[data-tab="overview"] .member {
				height: unset;
				padding-right: 0.2em;

				.main-stats {
					display: grid;
					gap: 0.3rem;
					grid-template-columns: repeat(3, 1fr);
				}

				.name a {
					max-width: 10em;
					overflow: hidden;
					text-overflow: ellipsis;
				}
			}

			.tab.active {
				flex-direction: column;
				overflow: hidden scroll;
			}

			.sidebar {
				overflow: unset;
				width: unset;
			}

			.content {
				overflow: unset;
			}
		}
	}
	@container actor-sheet (width < #{$player-character-breakpoint}) {
		&.character {
			.crb-style {
				grid-template-columns: initial !important;
				grid-template-areas: "header " "nav    " "content" !important;

				aside {
					background-image: none;

					.logo {
						display: none;
					}
				}

				.pf-rank {
					width: 4em;
					text-overflow: ellipsis;
					overflow: hidden;
					display: inline-block;
				}

				@include sheet-nav-bar;

				.sheet-body .sheet-content .tab {
					&[data-tab=character] {
						.character-details {
							.abcd {
								grid-template-columns: repeat(2, 1fr);

								.detail.deity {
									grid-column: span 2;
								}
							}
						}

						.attributes .attribute .label {
							display: none;
						}
					}

					&[data-tab=actions] {
						.button-group {
							flex-wrap: wrap !important;
						}

						button.tag.damage:after {
							content: '(' attr(data-tooltip) ')';
						}
					}

					&[data-tab=proficiencies] {
						ul.proficiencies-list li .button-group button {
							width: 4em;
							text-overflow: ellipsis;
							overflow: hidden;
							display: inline-block;
						}
					}
				}

				header.char-header .char-level {
					.exp-data {
						padding: initial !important;
					}

					flex-wrap: wrap !important;
					justify-content: center !important;
				}
			}

			&:not([data-color-scheme=dark]) .sheet-content .tab.sidebar {
				background-color: var(--primary);
			}
		}
	}
	@container actor-sheet (width < #{$loot-sheet-breakpoint}) {
		&.loot form {
			flex-direction: column-reverse;
			overflow: hidden scroll;

			section {
				&.sidebar {
					position: sticky;
					display: grid;
					grid-template-areas: "a b"
									"c c";
					width: 100%;

					img.actor-image {
						border-bottom: unset !important;
					}

					.gm-settings {
						border-bottom: unset;
						margin: auto 0;

						.loot-distribution {
							flex-direction: row;
						}
					}
				}

				&.sheet-header {
					position: sticky;
				}

				&.content {
					height: unset;
				}
			}

			.inventory .inventory-list {
				overflow: hidden;
			}
		}
	}
	@container actor-sheet (width < #{$vehicle-sheet-breakpoint}) {
		&.vehicle {
			.crb-style {
				grid-template-columns: initial !important;
				grid-template-areas: "header " "nav    " "content" !important;

				.sheet-navigation {
					min-width: unset;
				}

				@include sheet-nav-bar;

				aside {
					background-image: none;

					.logo {
						display: none;
					}
				}

				.tab {
					&[data-tab=details] {
						.vehicle-details .detail-sheet {
							grid: repeat(2, 1fr)/3fr 2fr !important;

							.detail-small {
								display: grid !important;
								grid-template-columns: repeat(2, 0.5fr);
								grid-column-gap: 0.5em;

							}
						}
					}
				}
			}

			&:not([data-color-scheme=dark]) .sheet-content .tab.sidebar {
				background-color: var(--primary);
			}
		}
	}
	@container actor-sheet (width < #{$hazard-sheet-breakpoint}) {
		&.hazard .container {
			display: block;
			overflow: hidden scroll;

			.sidebar {
				overflow: hidden;
				height: unset;
				width: unset;
			}

			.content {
				overflow: hidden;
			}
		}
	}

	@container actor-sheet (width >= #{$player-character-breakpoint}) {
		&.character {
			a#sidebar-tab {
				display: none;
			}
		}
	}
	@container actor-sheet (width >= #{$vehicle-sheet-breakpoint}) {
		&.vehicle {
			a#sidebar-tab {
				display: none;
			}
		}
	}
}

@media screen and (min-width: #{$global-breakpoint}) {
	.collapse-mobile {
		display: none;
	}
	.send-button {
		display: none;
	}

}

#mobile-chat-row {
	height: 100%;
}

@media screen and (max-width: #{$global-breakpoint}) {
	.collapse:not(.collapse-mobile) {
		display: none;
	}
	.app {
		margin: 0;
	}

	:is(#ui-left, #ui-middle, #ui-bottom) {
		display: none;
	}

	:is(#ui-right, #ui-right #sidebar) {
		margin: 0;
		padding: 0;
		width: 100%;
	}

	#chat-form textarea {
		width: calc(100% - calc(4em + var(--send-button-gap)));
	}

	.send-button {
		right: 0;
		width: 2em;
		transition: text-shadow 0.15s ease-in-out, background-color 0.15s ease-in-out, border 0.15s ease-in-out, color 0.15s ease-in-out, box-shadow 0.15s ease-in-out, backdrop-filter 0.15s ease-in-out, border-radius 0.15s;
		text-shadow: 0 0 0.2em black;
		box-shadow: var(--glassy);
		color: var(--color-text-light-heading);
		font-size: 2em;
		background-color: var(--glass-bg-light);
	}


	.dorako-ui .send-button {
		border: unset;
		border-radius: var(--border-radius);
	}

	.chatcommander-active .send-button {
		height: 100%;
		position: absolute;
		top: 0;
	}

	body:not(.chatcommander-active) .send-button {
		flex-basis: auto;
		height: unset;
		top: -2em;
	}

	#chat-message {
		flex-basis: auto;
	}

	#mobile-chat-row {
		flex-wrap: nowrap;
		gap: var(--send-button-gap);
	}

	#sidebar-tabs {
		font-size: 2em;
	}

	:is(.sheet.actor.character .window-resizable-handle, .popout-module-button, .pathmuncher-open, .configure-token, .configure-creature, .send-to-taskbar, .configure-theatre, .console-print, .document-id-link, .document-image-link, .simple-calendar, #tokenbar) {
		display: none !important;
	}

	div#taskbar.taskbar {
		display: none;
	}


	.pf2e-ui #sidebar-tabs > .item {
		flex-basis: 2em !important;
		height: 2em !important;
	}

	.window-app.fullscreen-window {
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;

		.window-resizable-handle {
			/*display: none;*/
		}
	}

	#ui-right {
		#sidebar {
			height: 100%;

			&.collapsed {
				height: unset;

				#sidebar-tabs .item {
					display: none;
				}
			}

			&:not(.collapsed) {
				.fa-bars {
					transform: rotate(-90deg);
				}
			}

			> .dorako-resize {
				display: none;
			}
		}
	}


	#client-settings {
		div:not(#mps-view-group).flexcol {
		}

		.window-content {
			overflow: hidden;
		}

		.sidebar {
			padding-left: 3rem;
			padding-right: 3rem;
		}

		footer {
			position: sticky;
			bottom: 0;
			width: inherit;
			max-width: inherit;
			flex-grow: 0;
		}

		.scrollable {
			overflow: hidden auto;
		}

		form {
			padding-left: 1em;
			padding-right: 1em;
		}

		footer button {
			height: 2rem;
			flex-basis: max-content;
		}
	}

	#hurry-up {
		display: none;
	}

	.mseCharacterName {
		flex-basis: 100%;
	}

	#compendium-browser > section.window-content > .content-box {
		> section.content > .tab.browser.active > div {
			grid-template-columns: auto auto;
		}

		.control-area {
			min-width: unset;
			width: unset;
		}

		:is(.filtercontainer, .sortcontainer) div.title {
			height: unset;
			flex-direction: column;
		}

		.list-buttons {
			display: none;
		}
	}
}

#combat .combatant .distance {
	padding: 0 0.3em;
}
