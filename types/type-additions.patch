Index: types/foundry/client/pixi/canvas-layer/grid-layer.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/types/foundry/client/pixi/canvas-layer/grid-layer.d.ts b/types/foundry/client/pixi/canvas-layer/grid-layer.d.ts
--- a/types/foundry/client/pixi/canvas-layer/grid-layer.d.ts	(revision b3dbabae86f862914df4b4404a6385c56918c34b)
+++ b/types/foundry/client/pixi/canvas-layer/grid-layer.d.ts	(revision db2c6a72df3cd4a1431aa39fd3c8ec6ce94a4d28)
@@ -56,22 +56,24 @@
          * Measure the grid-wise distance between two point coordinates.
          * @param origin The origin point
          * @param target The target point
+         * @param options Additional options which modify the measurement
          * @return The measured distance between these points
          *
          * @example
          * let distance = canvas.grid.measureDistance({x: 1000, y: 1000}, {x: 2000, y: 2000});
          */
-        measureDistance(origin: Point, target: Point): number;
+        measureDistance(origin: Point, target: Point, options?: MeasureDistancesOptions): number;

         /**
          * Measure the distance traveled over an array of distance segments.
          * @param segments An array of measured segments
          * @param options  Additional options which modify the measurement
          */
-        measureDistances(segments: Segment[], options?: Record<string, unknown>): number[];
+        measureDistances(segments: Segment[], options?: MeasureDistancesOptions): number[];

         /* -------------------------------------------- */
         /*  Grid Highlighting Methods                   */
+
         /* -------------------------------------------- */

         /**
@@ -121,6 +123,11 @@
         gridColor?: string | null;
         gridAlpha?: number | null;
     }
+
+    interface MeasureDistancesOptions {
+        /** Return the distance in grid increments rather than the co-ordinate distance. */
+        gridSpaces?: boolean;
+    }
 }

 interface GridLayerOptions extends CanvasLayerOptions {
Index: types/foundry/client/pixi/board.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/types/foundry/client/pixi/board.d.ts b/types/foundry/client/pixi/board.d.ts
--- a/types/foundry/client/pixi/board.d.ts	(revision b3dbabae86f862914df4b4404a6385c56918c34b)
+++ b/types/foundry/client/pixi/board.d.ts	(revision db2c6a72df3cd4a1431aa39fd3c8ec6ce94a4d28)
@@ -8,7 +8,7 @@
             MeasuredTemplateDocument<TScene>
         >,
         TToken extends Token<TokenDocument<TScene>> = Token<TokenDocument<TScene>>,
-        TEffectsCanvasGroup extends EffectsCanvasGroup = EffectsCanvasGroup
+        TEffectsCanvasGroup extends EffectsCanvasGroup = EffectsCanvasGroup,
     > {
         /** A perception manager interface for batching lighting, sight, and sound updates */
         perception: PerceptionManager;
@@ -143,6 +143,7 @@

         /* -------------------------------------------- */
         /*  Properties and Attributes                   */
+
         /* -------------------------------------------- */

         /** A flag for whether the game Canvas is initialized and ready for drawing. */
@@ -186,6 +187,7 @@

         /* -------------------------------------------- */
         /*  Initialization                              */
+
         /* -------------------------------------------- */

         /**
@@ -197,6 +199,7 @@

         /* -------------------------------------------- */
         /*  Rendering                                   */
+
         /* -------------------------------------------- */

         /**
@@ -250,6 +253,7 @@

         /* -------------------------------------------- */
         /*  Methods                                     */
+
         /* -------------------------------------------- */

         /** Activate framerate tracking by adding an HTML element to the display and refreshing it every frame. */
@@ -313,7 +317,7 @@
          * @param origin  Point to display Ping at
          * @param options Additional options to configure how the ping is drawn.
          */
-        ping(origin: Point, options: Record<string, unknown>): Promise<boolean>;
+        ping(origin: Point, options?: Record<string, unknown>): Promise<boolean>;

         /**
          * Create a BlurFilter instance and register it to the array for updates when the zoom level changes.
Index: types/foundry/client/game.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/types/foundry/client/game.d.ts b/types/foundry/client/game.d.ts
--- a/types/foundry/client/game.d.ts	(revision b3dbabae86f862914df4b4404a6385c56918c34b)
+++ b/types/foundry/client/game.d.ts	(revision db2c6a72df3cd4a1431aa39fd3c8ec6ce94a4d28)
@@ -21,7 +21,7 @@
         TItem extends Item<null>,
         TMacro extends Macro,
         TScene extends Scene,
-        TUser extends User<TActor>
+        TUser extends User<TActor>,
     > {
         /**
          * The named view which is currently active.
